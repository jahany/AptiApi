// <auto-generated />
using System;
using AptinetDataAccessLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AptinetDataAccessLibrary.Migrations
{
    [DbContext(typeof(AP_DBContext))]
    [Migration("20231125041244_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.AdminUser", b =>
                {
                    b.Property<string>("barcode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("barcode");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Factor", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int>("Storeid")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Storeid");

                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("basketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.Property<DateTime>("regdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("totalCount")
                        .HasColumnType("int");

                    b.Property<float?>("totalPrice")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Factor");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.FactorList", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("Factorid")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "factorid");

                    b.Property<long>("Productid")
                        .HasColumnType("bigint");

                    b.Property<int?>("count")
                        .HasColumnType("int");

                    b.Property<float?>("weight")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("Factorid");

                    b.HasIndex("Productid");

                    b.ToTable("FactorList");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Product", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int>("Storeid")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Storeid");

                    b.Property<string>("barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("commentCount")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("finalprice")
                        .HasColumnType("real");

                    b.Property<int?>("insertedWeighted")
                        .HasColumnType("int");

                    b.Property<bool>("isOffer")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPlu")
                        .HasColumnType("bit");

                    b.Property<int?>("meanWeight")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.Property<bool>("tax")
                        .HasColumnType("bit");

                    b.Property<int?>("tolerance")
                        .HasColumnType("int");

                    b.Property<int?>("w1")
                        .HasColumnType("int");

                    b.Property<int?>("w10")
                        .HasColumnType("int");

                    b.Property<int?>("w2")
                        .HasColumnType("int");

                    b.Property<int?>("w3")
                        .HasColumnType("int");

                    b.Property<int?>("w4")
                        .HasColumnType("int");

                    b.Property<int?>("w5")
                        .HasColumnType("int");

                    b.Property<int?>("w6")
                        .HasColumnType("int");

                    b.Property<int?>("w7")
                        .HasColumnType("int");

                    b.Property<int?>("w8")
                        .HasColumnType("int");

                    b.Property<int?>("w9")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Storeid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Store", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Suggestion", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("Productid")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "productid");

                    b.Property<long>("Productidsuggested")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Productid");

                    b.ToTable("Suggestion");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loyalityBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offerLimitedPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offerMount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offerPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Versions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("appVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dbVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagesVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Weights", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("w1")
                        .HasColumnType("int");

                    b.Property<int?>("w10")
                        .HasColumnType("int");

                    b.Property<int?>("w2")
                        .HasColumnType("int");

                    b.Property<int?>("w3")
                        .HasColumnType("int");

                    b.Property<int?>("w4")
                        .HasColumnType("int");

                    b.Property<int?>("w5")
                        .HasColumnType("int");

                    b.Property<int?>("w6")
                        .HasColumnType("int");

                    b.Property<int?>("w7")
                        .HasColumnType("int");

                    b.Property<int?>("w8")
                        .HasColumnType("int");

                    b.Property<int?>("w9")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Factor", b =>
                {
                    b.HasOne("AptinetDataAccessLibrary.Models.User", null)
                        .WithMany("factors")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.FactorList", b =>
                {
                    b.HasOne("AptinetDataAccessLibrary.Models.Factor", null)
                        .WithMany("factorList")
                        .HasForeignKey("Factorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AptinetDataAccessLibrary.Models.Product", null)
                        .WithMany("factorLists")
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Product", b =>
                {
                    b.HasOne("AptinetDataAccessLibrary.Models.Store", null)
                        .WithMany("products")
                        .HasForeignKey("Storeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Suggestion", b =>
                {
                    b.HasOne("AptinetDataAccessLibrary.Models.Product", null)
                        .WithMany("suggestions")
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Factor", b =>
                {
                    b.Navigation("factorList");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Product", b =>
                {
                    b.Navigation("factorLists");

                    b.Navigation("suggestions");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.Store", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("AptinetDataAccessLibrary.Models.User", b =>
                {
                    b.Navigation("factors");
                });
#pragma warning restore 612, 618
        }
    }
}
